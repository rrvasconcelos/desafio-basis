services:
  api:
    image: bookstore-api:latest
    build:
      context: ./src
      dockerfile: BookStore.Api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=db;Database=bookStoreDb;Username=postgres;Password=postgres
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bookstore-network

  web:
    image: bookstore-web:latest
    build:
      context: ./src/BookStore.Web
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - api
    networks:
      - bookstore-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: bookStoreDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bookstore-network

networks:
  bookstore-network:
    driver: bridge

volumes:
  postgres_data:
